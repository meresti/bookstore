version: "3"

volumes:
  elasticsearch_data: {}
  filebeat_data: {}
  prometheus_data: {}
  grafana_data: {}

services:

  consul:
    image: consul:latest
    command: "agent -dev -client 0.0.0.0"
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"

  git2consul:
    image: cimpress/git2consul
    restart: always
    depends_on:
      - consul
    volumes:
      - ./config/git2consul:/config
    command: --endpoint consul --config-file /config/git2consul.json

  # Use storage type Cassandra. To use other storage like  ElasticSearch and MySQL check the examples in
  # https://github.com/openzipkin/zipkin/tree/master/docker/examples
  zipkin-storage:
    image: openzipkin/zipkin-cassandra
    ports:
      - 9042:9042

  zipkin-server:
    image: openzipkin/zipkin:2.20.0         # the latest version (2.21.0) shows a blank page when accessing the UI
    depends_on:
      - zipkin-storage
    environment:
      - STORAGE_TYPE=cassandra3
      # When using the test docker image, or have schema pre-installed, you don't need to re-install it
      - CASSANDRA_ENSURE_SCHEMA=false
      # When overriding this value, note the minimum supported version is 3.9
      # If you you cannot run 3.9+, but can run 2.2+, set STORAGE_TYPE=cassandra
      - CASSANDRA_CONTACT_POINTS=zipkin-storage
    ports:
      - 9411:9411

  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./config/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./config/grafana/grafana.env
    ports:
      - "3000:3000"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data:rw
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    depends_on:
      - elasticsearch
    volumes:
      - ./config/logstash/pipeline/:/usr/share/logstash/pipeline/
    ports:
      - 25826:25826
      - 5044:5044
    restart: on-failure

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    restart: on-failure

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.6.2
    volumes:
      - ./config/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers:ro                  # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                              # Additional information about containers
      - filebeat_data:/usr/share/filebeat/data:rw                                 # Persistence data
    user: root                                                                    # Allow access to log files and docker.sock
    restart: on-failure
    depends_on:
      - logstash

  gateway:
    image: bookstore/gateway:v0.1
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        PROJECT: gateway
        PORT: 8080
        MAIN_CLASS: com.meresti.gateway.GatewayApplication
    depends_on:
      - consul
      - zipkin-server
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      ZIPKIN_SERVER_URL: http://zipkin-server:9411/
      DEBUG_PORT: 5080
      GOOGLE_CLIENT_ID: <your-client-id>
      GOOGLE_CLIENT_SECRET: <your-client-secret>
    ports:
      - "8080:8080"
      - "5080:5080"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  hello-service:
    image: bookstore/hello-service:v0.1
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        PROJECT: hello-service
        PORT: 8010
        MAIN_CLASS: com.meresti.bookstore.helloservice.HelloServiceApplication
    depends_on:
      - consul
      - zipkin-server
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      ZIPKIN_SERVER_URL: http://zipkin-server:9411/
      DEBUG_PORT: 5010
    ports:
      - "8010:8010"
      - "5010:5010"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  #  auth-service:
  #    image: bookstore/auth-service:v0.1
  #    build:
  #      context: ..
  #      dockerfile: docker/Dockerfile
  #      args:
  #        PROJECT: auth-service
  #        PORT: 7878
  #        MAIN_CLASS: com.meresti.bookstore.authservice.AuthServiceApplication
  #    depends_on:
  #      - config-server
  #      - eureka-service
  #    environment:
  #      CONFIG_SERVER_URL: http://config-server:9999
  #      EUREKA_SERVICE_URL: http://eureka-service:8761/eureka/
  #    ports:
  #      - "7878:7878"

  book-service:
    image: bookstore/book-service:v0.1
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        PROJECT: book-service
        PORT: 8020
        MAIN_CLASS: com.meresti.bookstore.bookservice.BookServiceApplication
    depends_on:
      - consul
      - zipkin-server
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      ZIPKIN_SERVER_URL: http://zipkin-server:9411/
      DEBUG_PORT: 5020
    ports:
      - "8020:8020"
      - "5020:5020"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  bookstore-client:
    image: bookstore/bookstore-client:v0.1
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        PROJECT: bookstore-client
        PORT: 8070
        MAIN_CLASS: com.meresti.bookstoreclient.BookstoreClientApplication
    depends_on:
      - consul
      - zipkin-server
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      ZIPKIN_SERVER_URL: http://zipkin-server:9411/
      DEBUG_PORT: 5070
    ports:
      - "8070:8070"
      - "5070:5070"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
